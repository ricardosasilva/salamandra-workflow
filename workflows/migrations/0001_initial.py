# Generated by Django 2.2.1 on 2019-08-17 23:01

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_extensions.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('uuid', django_extensions.db.fields.ShortUUIDField(blank=True, editable=False, unique=True)),
                ('name', models.CharField(help_text='A text to help to identify the purpose of the job.', max_length=50)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('finish_datetime', models.DateTimeField(blank=True, null=True)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Job',
                'verbose_name_plural': 'Jobs',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('uuid', django_extensions.db.fields.ShortUUIDField(blank=True, editable=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('slug', models.SlugField()),
                ('class_name', models.CharField(help_text='Name of python class with the code to evaluate state transition.', max_length=255)),
                ('due_time', models.PositiveIntegerField(help_text="Task's due time in minutes.")),
                ('due_time_warning', models.PositiveIntegerField(help_text='Time in minutes after the task creation to put it on warning status.')),
                ('is_initial', models.BooleanField(default=False)),
                ('is_final', models.BooleanField(default=False)),
                ('max_unassigned_time', models.PositiveIntegerField(help_text='Max time, in minutes, the task may reamin unassigned.')),
                ('max_unassigned_time_warning', models.PositiveIntegerField(help_text="Max time, in minutes, the task may reamin unassigned before it's status is set to warning.")),
            ],
        ),
        migrations.CreateModel(
            name='Swimlane',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('uuid', django_extensions.db.fields.ShortUUIDField(blank=True, editable=False, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from=['name'])),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('uuid', django_extensions.db.fields.ShortUUIDField(blank=True, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WorkflowVersion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('uuid', django_extensions.db.fields.ShortUUIDField(blank=True, editable=False, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('version', models.PositiveIntegerField(default=1)),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='versions', to='workflows.Workflow')),
            ],
            options={
                'unique_together': {('workflow', 'version')},
            },
        ),
        migrations.CreateModel(
            name='TaskLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('uuid', django_extensions.db.fields.ShortUUIDField(blank=True, editable=False, unique=True)),
                ('action', models.CharField(choices=[['0', 'Iniciou a tarefa'], ['1', 'Pausou a tarefa'], ['3', 'Abandonou a tarefa'], ['4', 'Finalizou a tarefa'], ['5', 'Reabriu a tarefa']], max_length=1)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='workflows.Job')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('uuid', django_extensions.db.fields.ShortUUIDField(blank=True, editable=False, unique=True)),
                ('activated_at', models.DateTimeField(default=django.utils.timezone.now, help_text='Use to schedule tasks. The task only become active after this date and time.')),
                ('is_started', models.BooleanField(default=False)),
                ('is_paused', models.BooleanField(default=False)),
                ('is_finished', models.BooleanField(default=False)),
                ('is_canceled', models.BooleanField(default=False)),
                ('initial_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('final_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('start_datetime', models.DateTimeField(blank=True, null=True)),
                ('pause_datetime', models.DateTimeField(blank=True, null=True)),
                ('finish_datetime', models.DateTimeField(blank=True, null=True)),
                ('finished_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tasks_finished_by', to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tasks', to='workflows.Job')),
                ('paused_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tasks_paused_by', to=settings.AUTH_USER_MODEL)),
                ('started_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tasks_started_by', to=settings.AUTH_USER_MODEL)),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tasks', to='workflows.State')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Task',
                'verbose_name_plural': 'Tasks',
            },
        ),
        migrations.AddField(
            model_name='state',
            name='swimlanes',
            field=models.ManyToManyField(blank=True, related_name='states', to='workflows.Swimlane'),
        ),
        migrations.AddField(
            model_name='state',
            name='workflow_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='states', to='workflows.WorkflowVersion'),
        ),
        migrations.AddField(
            model_name='job',
            name='workflow_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='workflows.WorkflowVersion'),
        ),
        migrations.AlterUniqueTogether(
            name='state',
            unique_together={('workflow_version', 'slug'), ('workflow_version', 'class_name')},
        ),
    ]
